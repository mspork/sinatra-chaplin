// Generated by CoffeeScript 1.6.2
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['views/base/view', 'text!templates/notes.hbs', 'models/notes'], function(View, template, Notes) {
    'use strict';
    var NotesView, _ref;

    return NotesView = (function(_super) {
      __extends(NotesView, _super);

      function NotesView() {
        _ref = NotesView.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      NotesView.prototype.id = 'notes';

      NotesView.prototype.container = '#content-container';

      NotesView.prototype.getTemplateData = function() {
        var data;

        data = NotesView.__super__.getTemplateData.apply(this, arguments);
        console.log(data);
        return data;
      };

      NotesView.prototype.listen = {
        'change collection': 'processNotes'
      };

      NotesView.prototype.template = template;

      template = null;

      NotesView.prototype.processNotes = function() {
        console.log('got Notes via fetch');
        console.log(this.collection);
        return render();
      };

      NotesView.prototype.initialize = function() {
        return NotesView.__super__.initialize.apply(this, arguments);
      };

      return NotesView;

    })(View);
  });

}).call(this);
